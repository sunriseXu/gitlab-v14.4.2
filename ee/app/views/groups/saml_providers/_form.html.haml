%section.saml_provider.gl-mt-5
  = gitlab_ui_form_for [group, saml_provider], url: group_saml_providers_path, html: { id: 'js-saml-settings-form' } do |f|
    .form-group
      = form_errors(saml_provider)
      = f.gitlab_ui_checkbox_component :enabled, s_('GroupSAML|Enable SAML authentication for this group'), checkbox_options: { class: 'js-group-saml-enabled-input' }
    .form-group
      - enable_saml_help_text = s_('GroupSAML|Before enforcing SSO, enable SAML authentication.')
      - web_activity_warning_link_start = '<a href="%{url}" target="_blank" rel="noopener noreferrer">'.html_safe % { url: help_page_path('user/group/saml_sso/index', anchor: 'sso-enforcement') }
      - web_activity_warning_text = html_escape(s_('GroupSAML|%{strongOpen}Warning%{strongClose} - Enable %{linkStart}SSO enforcement%{linkEnd} to reduce security risks.')) % { strongOpen: '<strong>'.html_safe, strongClose: '</strong>'.html_safe, linkStart: web_activity_warning_link_start, linkEnd: '</a>'.html_safe }
      - web_activity_warning_tag = '<span class="js-warning %{class}">%{text}</span>'.html_safe % { class: saml_provider.enforced_sso? && 'gl-display-none', text: web_activity_warning_text }
      - web_activity_help_text = '%{enable_saml_help_text_tag}%{web_activity_warning_tag}'.html_safe % { enable_saml_help_text_tag: saml_sso_settings_generate_helper_text(display_none: saml_provider.enabled?, text: enable_saml_help_text), web_activity_warning_tag: web_activity_warning_tag }
      = f.gitlab_ui_checkbox_component :enforced_sso, s_('GroupSAML|Enforce SSO-only authentication for web activity for this group'), help_text: web_activity_help_text, checkbox_options: { checked: saml_provider.new_record? || saml_provider.enforced_sso?, class: 'js-group-saml-enforced-sso-input', data: { qa_selector: 'enforced_sso_checkbox' } }

    .form-group
      - enable_web_auth_help_text = s_("GroupSAML|Before enforcing SSO-only authentication for Git activity of all users, enable SSO-only authentication for web activity.")
      = f.gitlab_ui_checkbox_component :git_check_enforced, s_('GroupSAML|Enforce SSO-only authentication for Git and Dependency Proxy activity for this group'), help_text: saml_sso_settings_generate_helper_text(display_none: saml_provider.enabled?, text: enable_web_auth_help_text), checkbox_options: { class: 'js-group-saml-enforced-git-check-input' }
    - if Feature.enabled?(:group_managed_accounts, group)
      .form-group
        - enforce_sso_help_text = s_('GroupSAML|To be able to enable group-managed accounts, you first need to enable enforced SSO.')
        = f.gitlab_ui_checkbox_component :enforced_group_managed_accounts, s_('GroupSAML|Enforce users to have dedicated group-managed accounts for this group'), help_text: saml_sso_settings_generate_helper_text(display_none: saml_provider.enforced_sso?, text: enforce_sso_help_text), checkbox_options: { class: 'js-group-saml-enforced-group-managed-accounts-input', data: { qa_selector: 'group_managed_accounts_checkbox' } }
      .form-group
        - enforce_accounts_help_text = s_('GroupSAML|To be able to prohibit outer forks, you first need to enforce dedicate group managed accounts.')
        = f.gitlab_ui_checkbox_component :prohibited_outer_forks, s_('GroupSAML|Prohibit outer forks for this group'), help_text: saml_sso_settings_generate_helper_text(display_none: saml_provider.enforced_group_managed_accounts?, text: enforce_accounts_help_text), checkbox_options: { class: 'js-group-saml-prohibited-outer-forks-input' }
        .bs-callout.bs-callout-info.js-callout{ class: !saml_provider.enforced_group_managed_accounts? && 'gl-display-none' }
          = s_('GroupSAML|With prohibit outer forks flag enabled group members will be able to fork project only inside your group.')
    .well-segment.borderless.mb-3.col-12.col-lg-9.p-0
      = f.label :sso_url, class: 'label-bold' do
        = s_('GroupSAML|Identity provider single sign-on URL')
      = f.text_field :sso_url, placeholder: 'e.g. https://example.com/adfs/ls', class: 'form-control', data: { qa_selector: 'identity_provider_sso_field' }
      .form-text.text-muted
        = s_('GroupSAML|Members will be forwarded here when signing in to your group. Get this from your identity provider, where it can also be called "SSO Service Location", "SAML Token Issuance Endpoint", or "SAML 2.0/W-Federation URL".')

    .well-segment.borderless.mb-3.col-12.col-lg-9.p-0
      = f.label :certificate_fingerprint, class: 'label-bold' do
        = s_('GroupSAML|Certificate fingerprint')
      = f.text_field :certificate_fingerprint, placeholder: 'e.g. 0a:1b:2c:3d:00:11:22:33:44:55:66:77:88:99:aa:bb:cc:dd:ee:ff', class: 'form-control', data: { qa_selector: 'certificate_fingerprint_field' }
      .form-text.text-muted
        = s_('GroupSAML|SHA1 fingerprint of the SAML token signing certificate. Get this from your identity provider, where it can also be called "Thumbprint".')

    .well-segment.borderless.gl-mb-3.col-12.col-lg-9.gl-p-0
      = f.label :default_membership_role, class: 'label-bold' do
        = s_('GroupSAML|Default membership role')
      = f.select :default_membership_role, options_for_select(group.access_level_roles, saml_provider.default_membership_role), {}, class: 'form-control', data: { qa_selector: 'default_membership_role_dropdown' }
      .form-text.text-muted
        = s_('GroupSAML|This will be set as the access level of users added to the group.')

    .mt-3
      = f.submit _("Save changes"), class: 'gl-button btn btn-confirm', data: { qa_selector: 'save_changes_button' }
      #js-saml-test-button.has-tooltip.float-right
        = render 'test_button', saml_provider: @saml_provider
