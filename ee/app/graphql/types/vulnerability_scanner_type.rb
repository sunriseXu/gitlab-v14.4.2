# frozen_string_literal: true

module Types
  class VulnerabilityScannerType < BaseObject
    graphql_name 'VulnerabilityScanner'
    description 'Represents a vulnerability scanner'

    authorize :read_vulnerability_scanner

    field :id, GraphQL::Types::ID,
      null: true, description: 'ID of the scanner.'

    field :name, GraphQL::Types::String,
      null: true, description: 'Name of the vulnerability scanner.'

    field :external_id, GraphQL::Types::String,
      null: true, description: 'External ID of the vulnerability scanner.'

    field :vendor, GraphQL::Types::String,
      null: true, description: 'Vendor of the vulnerability scanner.'

    field :report_type, VulnerabilityReportTypeEnum, null: true,
                                                     description: 'Type of the vulnerability report.'

    field :report_type_humanized, GraphQL::Types::String, null: true,
                                                          description: 'Humanized type of the vulnerability report.'

    def report_type_humanized
      report_type = object.report_type
      upcase_type = report_type.to_s.upcase
      case report_type.to_sym
      when :dast, :sast then upcase_type
      when :api_fuzzing then 'API Fuzzing'
      else report_type.to_s.titleize
      end
    end
  end
end
