- pipeline = local_assigns.fetch(:pipeline)
- project = local_assigns.fetch(:project)

- license_management_settings_path = can?(current_user, :admin_software_license_policy, project) ? license_management_settings_path(project) : nil
- licenses_api_path = licenses_project_pipeline_path(project, pipeline) if project.feature_available?(:license_scanning)
- codequality_report_download_path = pipeline.downloadable_path_for_report_type(:codequality) if project.feature_available?(:full_codequality_report)

- if pipeline.expose_security_dashboard?
  #js-tab-security.build-security.tab-pane
    #js-security-report-app{ data: vulnerability_report_data(project, pipeline, current_user).to_h }

- if pipeline.expose_license_scanning_data?
  #js-tab-licenses.tab-pane
    #js-licenses-app{ data: { api_url: license_management_api_url(project),
    license_management_settings_path: license_management_settings_path,
    licenses_api_path: licenses_api_path,
    can_manage_licenses: can?(current_user, :admin_software_license_policy, project).to_s } }

- if codequality_report_download_path || pipeline.can_generate_codequality_reports?
  #js-tab-codequality.tab-pane
    #js-pipeline-codequality-report{ data: { codequality_report_download_path: codequality_report_download_path,
    blob_path: project_blob_path(project, pipeline.commit),
    project_path: project.full_path,
    pipeline_iid: pipeline.iid } }
